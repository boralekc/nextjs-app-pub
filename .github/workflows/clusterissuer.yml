name: App deploy workflow

on:
  workflow_call:
    inputs:
      APP_HOST:
        required: false
        type: string
      APP_NAMESPACE:
        required: false
        type: string
      PLAYBOOK:
        required: false
        type: string
      NAME_CLUSTERISSUER:
        required: false
        type: string
      USER_EMAIL:
        required: false
        type: string
      CHART_PATH:
        required: false
        type: string
      CLUSTERISSUER_NAME:
        required: false
        type: string
        default: 'clusterissuer'
    secrets:
      SSH_KEY:
        required: true
      SERVER_IP:
        required: true
      SERVER_USER:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
  
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible
          pip install kubernetes
          pip install passlib
  
      - name: Install kubernetes.core collection
        run: |
          ansible-galaxy collection install kubernetes.core
          ansible-galaxy collection install community.general

      - name: Setup SSH Tunnel
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -N -L 6443:localhost:6443 ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} &
          sleep 5

      - name: Retrieve kubeconfig
        run: |
          echo "Attempting to SSH into server..."
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa -v ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} 'sudo cat /etc/rancher/k3s/k3s.yaml' > ${{ github.workspace }}/k3s.yaml
        env:
          SERVER_IP: ${{ secrets.SERVER_IP }}
          SERVER_USER: ${{ secrets.SERVER_USER }}

      - name: Set KUBECONFIG environment variable
        run: echo "KUBECONFIG=${{ github.workspace }}/k3s.yaml" >> $GITHUB_ENV

      - name: Run Ansible playbook
        env:
          ANSIBLE_HOST_KEY_CHECKING: "false"
          ANSIBLE_CONFIG: ${{ github.workspace }}/ansible
          KUBECONFIG: ${{ github.workspace }}/k3s.yaml
          APP_HOST: ${{ inputs.APP_HOST }}
          APP_NAMESPACE: ${{ inputs.APP_NAMESPACE }}
          NAME_CLUSTERISSUER: ${{ inputs.NAME_CLUSTERISSUER }}
          CHART_PATH: ${{ github.workspace }}/${{ inputs.CHART_PATH }}
        run: |
          ansible-playbook ${{ github.workspace }}/ansible/playbooks/${{ inputs.PLAYBOOK }}
